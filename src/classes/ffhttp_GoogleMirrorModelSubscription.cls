/**
 * Copyright (c) 2014, FinancialForce.com, inc
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, 
 *   are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice, 
 *      this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice, 
 *      this list of conditions and the following disclaimer in the documentation 
 *      and/or other materials provided with the distribution.
 * - Neither the name of the FinancialForce.com, inc nor the names of its contributors 
 *      may be used to endorse or promote products derived from this software without 
 *      specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
 *  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
 *  THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 *  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**/

/**
 * ffhttp_GoogleMirrorModelSubscription
 *
 * An object that represents the meta data for a subscription in Google Mirror.
 * https://developers.google.com/glass/v1/reference/subscriptions
 */
public with sharing class ffhttp_GoogleMirrorModelSubscription extends ffhttp_GoogleMirrorModelAbstractObject
{
	//Statics
	//Notification Operations
	public static final String NOTIFICATION_OPERATION_DELETE = 'DELETE';
	public static final String NOTIFICATION_OPERATION_INSERT = 'INSERT';
	public static final String NOTIFICATION_OPERATION_MENU_ACTION = 'MENU_ACTION';
	public static final String NOTIFICATION_OPERATION_UPDATE = 'UPDATE';
	
	//Notification User Action Types
	public static final String NOTIFICATION_USER_ACTION_TYPE_SHARE = 'SHARE'; 			//The user shared an item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_REPLY = 'REPLY'; 			//The user replied to an item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_REPLY_ALL = 'REPLY_ALL'; 	//The user replied to all recipients of an item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_CUSTOM = 'CUSTOM'; 		//The user selected a custom menu item on the timeline item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_DELETE = 'DELETE';			//The user deleted the item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_PIN = 'PIN';				//The user pinned the item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_UNPIN = 'UNPIN';			//The user unpinned the item.
	public static final String NOTIFICATION_USER_ACTION_TYPE_LAUNCH = 'LAUNCH';			//The user initiated a voice command.
	
	//Operations
	public static final String OPERATION_DELETE = 'DELETE';		//The item has been deleted.
	public static final String OPERATION_INSERT = 'INSERT';		//A new item has been inserted.
	public static final String OPERATION_UPDATE = 'UPDATE';		//The item has been updated.
	
	//Collections
	public static final String COLLECTION_TIMELINE = 'timeline'; 	//Changes in the timeline including insertion, deletion, and updates.
	public static final String COLLECTION_LOCATIONS = 'locations'; 	//Location updates.
	public static final String COLLECTION_SETTINGS = 'settings';	//Settings updates.
	
	//Instance Variables
	private String callbackUrl;		//The URL where notifications should be delivered (must start with https://).	writable
	private String collection;		//The collection to subscribe to. Allowed values are: timeline, locations & settings.
	private String id;				//The ID of the subscription.	
	private String[] operation;		//A list of operations that should be subscribed to. 
									//An empty list indicates that all operations on the collection should be subscribed to. 
									//Allowed values are: UPDATE, INSERT, DELETE.
	private DateTime updated;		//The time at which this subscription was last modified, formatted according to RFC 3339.	
	private String userToken;		//An opaque token sent to the subscriber in notifications so that it can determine the ID of the user.
	private String verifyToken;		//A secret token sent to the subscriber in notifications so that it can verify that the notification was 
									//generated by Google.
									
	private Notification notification; 	//Container object for notifications. This is not populated in the Subscription resource.	

	/**
	 * Constructor
	 */
	public ffhttp_GoogleMirrorModelSubscription()
	{
		super(KIND_MIRROR_SUBSCRIPTION);
	}
	
	/**
	 * Get/Sets
	 */
	public String getCallbackUrl()
	{
		return callbackUrl;
	}
	public ffhttp_GoogleMirrorModelSubscription setCallbackUrl(String callbackUrl)
	{
		this.callbackUrl = callbackUrl;
		return this;
	}
	public String getCollection()
	{
		return collection;
	}
	public ffhttp_GoogleMirrorModelSubscription setCollection(String collection)
	{
		this.collection = collection;
		return this;
	}
	public String getId()
	{
		return id;
	}
	public ffhttp_GoogleMirrorModelSubscription setId(String id)
	{
		this.id = id;
		return this;
	}
	public String[] getOperation()
	{
		return operation;
	}
	public ffhttp_GoogleMirrorModelSubscription setOperation(String[] operation)
	{
		this.operation = operation;
		return this;
	}
	public DateTime getUpdated()
	{
		return updated;
	}
	public ffhttp_GoogleMirrorModelSubscription setUpdated(DateTime updated)
	{
		this.updated = updated;
		return this;
	}
	public String getUserToken()
	{
		return userToken;
	}
	public ffhttp_GoogleMirrorModelSubscription setUserToken(String userToken)
	{
		this.userToken = userToken;
		return this;
	}
	public String getVerifyToken()
	{
		return verifyToken;
	}
	public ffhttp_GoogleMirrorModelSubscription setVerifyToken(String verifyToken)
	{
		this.verifyToken = verifyToken;
		return this;
	}
	public Notification getNotification()
	{
		return notification;
	}
	public ffhttp_GoogleMirrorModelSubscription setNotification(Notification notification)
	{
		this.notification = notification;
		return this;
	}
   	 
	/**
	 * Notification
	 */
	public with sharing class Notification extends ffhttp_AbstractJsonSerializable
	{
		//Instance Variables
	 	private String collection;		//The collection that generated the notification.
	 	private String itemId; 			//The ID of the item that generated the notification.	
		private String operation;		//The type of operation that generated the notification. 
										//Acceptable values are: DELETE, INSERT, MENU_ACTION, UPDATE.
		private String userToken;		//The user token provided by the service when it subscribed for notifications.	
		private String verifyToken;		//The secret verify token provided by the service when it subscribed for notifications.				
		private List<Notification_UserAction> userActions; 	//A list of actions taken by the user that triggered the notification.
		
		/**
		 * Get/Sets
		 */
		public String getCollection()
		{
			return collection;
		}
		public Notification setCollection(String collection)
		{
			this.collection = collection;
			return this;
		}
		public String getItemId()
		{
			return itemId;
		}
		public Notification setItemId(String itemId)
		{
			this.itemId = itemId;
			return this;
		}
		public String getOperation()
		{
			return operation;
		}
		public Notification setOperation(String operation)
		{
			this.operation = operation;
			return this;
		}
		public String getUserToken()
		{
			return userToken;
		}
		public Notification setUserToken(String userToken)
		{
			this.userToken = userToken;
			return this;
		}
		public String getVerifyToken()
		{
			return verifyToken;
		}
		public Notification setVerifyToken(String verifyToken)
		{
			this.verifyToken = verifyToken;
			return this;
		}
		public List<Notification_UserAction> getUserActions()
		{
			return userActions;
		}
		public Notification setUserActions(List<Notification_UserAction> userActions)
		{
			this.userActions = userActions;
			return this;
		}
	}
	
	/**
	 * Notification_UserAction
	 */
	public with sharing class Notification_UserAction extends ffhttp_AbstractJsonSerializable
	{
		//Instance Variables
		private String payload;		//An optional payload for the action.
									//For actions of type CUSTOM, this is the ID of the custom menu item that was selected.	
		private String type;		//The type of action. 
									//The value of this can be: SHARE, REPLY, REPLY_ALL, CUSTOM, DELETE, PIN, UNPIN, LAUNCH
									//In the future, additional types may be added. UserActions with unrecognized types should be ignored.
	
		/**
		 * Get/Sets
		 */
		public String getPayload()
		{
			return payload;
		}
		public Notification_UserAction setPayload(String payload)
		{
			this.payload = payload;
			return this;
		}
		public String getType()
		{
			return type;
		}
		public Notification_UserAction setType(String type)
		{
			this.type = type;
			return this;
		}
	}
	
	/**
	 * Object to represent a list of Google Mirror Subscriptions.
	 */
	public with sharing class ItemList extends ffhttp_GoogleMirrorModelAbstractObject.AbstractList
	{
		List<ffhttp_GoogleMirrorModelSubscription> items;
		
		/**
		 * Constructor
		 */
		public ItemList()
		{
			super(KIND_MIRROR_SUBSCRIPTIONS_LIST);
		}
			
		public override List<ffhttp_GoogleMirrorModelAbstractObject> getItems() 
		{
			return (List<ffhttp_GoogleMirrorModelSubscription>)items;
		}
	}	
}
